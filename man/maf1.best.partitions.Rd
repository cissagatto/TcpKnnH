% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/validateMaF1.R
\name{maf1.best.partitions}
\alias{maf1.best.partitions}
\title{Identify the Best Partitions Based on Macro-F1 or Micro-F1}
\usage{
maf1.best.partitions(parameters)
}
\arguments{
\item{parameters}{A list containing necessary configuration settings, including:
\itemize{
\item \code{Best}: An integer indicating whether Macro-F1 (8) or Micro-F1 (other values) is used.
\item \code{Folders}: A list with folder paths, including:
\itemize{
\item \code{folderReports} – Path to report folder.
\item \code{folderValMaF1} – Path to Macro-F1 validation folder.
\item \code{folderValMiF1} – Path to Micro-F1 validation folder.
}
\item \code{Dataset.Info}: A list with dataset metadata, including:
\itemize{
\item \code{Labels} – Number of labels in the dataset.
}
\item \code{Number.Folds}: Number of cross-validation folds.
}}
}
\value{
The function does not return a value but generates multiple CSV files summarizing:
\itemize{
\item The best partitions for each KNN value.
\item The frequency of best partitions.
\item Summary statistics (mean, median, standard deviation, min, max).
}
}
\description{
This function evaluates different partitions using either the Macro-F1 or Micro-F1 metric and
identifies the best-performing partitions for each fold in a k-nearest neighbors (KNN) classification setting.
The results are stored in CSV files for further analysis.
}
\details{
The function follows these steps:
\enumerate{
\item Reads the \code{sparcification.csv} file to determine the number of KNN values (\code{s}).
\item Iterates over each KNN value, evaluating different partitions.
\item Reads and processes validation results stored in CSV files.
\item Identifies the best-performing partition for each fold.
\item Saves summary statistics and frequency counts for the best partitions.
}
}
\examples{
params <- list(
  Best = 8,
  Folders = list(
    folderReports = "path/to/reports",
    folderValMaF1 = "path/to/val/macro",
    folderValMiF1 = "path/to/val/micro"
  ),
  Dataset.Info = list(Labels = 10),
  Number.Folds = 10
)
maf1.best.partitions(params)
}
