% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/validateMaF1.R
\name{maf1.validate.partitions}
\alias{maf1.validate.partitions}
\title{Partition Validation for Machine Learning Experiments}
\usage{
maf1.validate.partitions(parameters)
}
\arguments{
\item{parameters}{A list containing the following elements:
\itemize{
\item \code{Number.Folds} (integer): Number of folds for cross-validation.
\item \code{k} (integer): K parameter for KNN.
\item \code{id_part} (integer): Partition identifier.
\item \code{Folders} (list): Paths to various required directories.
\item \code{Choosed} (list): Contains selections of methods and hybrid partitions.
\item \code{Dataset.Name} (string): Name of the dataset.
\item \code{Dataset.Info} (list): Dataset details, including attribute and label indices.
\item \code{FolderPartition} (string): Path to the partition directory.
}}
}
\value{
No explicit return value. The function generates configuration files,
converts data formats, and stores predictions in the appropriate directories.
}
\description{
This function performs partition validation in the context of machine learning.
It uses parallel processing to efficiently split and validate data.
}
\details{
The function iterates through the defined folds, segments the data into groups
according to precomputed partitions, and performs training and validation using ARFF files.
Additionally, it:
\itemize{
\item Creates folders to store processed data.
\item Converts CSV files to ARFF.
\item Adjusts files for compatibility with CLUS.
\item Executes predictions and saves the results.
\item Removes temporary files at the end of processing.
}
}
\examples{
\dontrun{
parameters <- list(
  Number.Folds = 5,
  k = 3,
  id_part = 1,
  Folders = list(
    folderUtils = "/path/to/utils",
    folderCommunities = "/path/to/communities",
    folderPartitions = "/path/to/partitions",
    folderCVTR = "/path/to/cvtr",
    folderCVVL = "/path/to/cvvl",
    folderReports = "/path/to/reports"
  ),
  Choosed = list(
    all.methods.choosed = data.frame(method = c("method1", "method2"), split = c(1, 2)),
    all.hybrid.partitions = data.frame(partitions = c(1, 2), groups = c(2, 3))
  ),
  Dataset.Name = "MyDataset",
  Dataset.Info = list(AttStart = 1, AttEnd = 10, LabelStart = 11)
)
maf1.validate.partitions(parameters)
}

}
